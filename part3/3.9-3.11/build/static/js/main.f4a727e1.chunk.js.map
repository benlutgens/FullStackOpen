{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Persons.js","Components/Notification.js","Services/personService.js","App.js","index.js"],"names":["Filter","search","handleSearch","value","onChange","PersonForm","newName","handleNameChange","addNewItem","newNum","handleNumChange","type","onClick","Persons","filterList","handleDelete","map","person","name","number","id","Notification","message","styles","error","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","success","thisStyle","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","status","App","useState","persons","setPersons","setNewName","setNewNum","setFilterList","setSearch","notification","setNotification","notificationType","setNotificationType","useEffect","pService","initialList","notify","setTimeout","event","thisSearch","target","length","list","filter","toLowerCase","includes","preventDefault","update","thisPerson","thisMatch","find","console","log","undefined","checkDuplicate","window","confirm","updatedPerson","newList","catch","newPerson","concat","deleteId","parseInt","personService","deleteList","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4a727e1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({search, handleSearch}) => {\r\n    return (\r\n        <div>\r\n            filter shown with \r\n            <input value={search} onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({newName, handleNameChange, addNewItem, newNum, handleNumChange}) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNum} onChange={handleNumChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" onClick={addNewItem}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({filterList, handleDelete}) => {\r\n    return (\r\n        <div>\r\n            {filterList.map(person => \r\n                <p key={person.id}>\r\n                    {person.name} {person.number}\r\n                    <button id={person.id} onClick={handleDelete}>\r\n                        Delete\r\n                    </button>\r\n                </p>\r\n            )}\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({message, type}) => {\r\n    const styles = {\r\n        error: {\r\n            color: 'red',\r\n            background: 'lightgrey',\r\n            fontSize: '20px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '5px',\r\n            padding: '10px',\r\n            marginBottom: '10px'\r\n        },\r\n        success: {\r\n            color: 'green',\r\n            background: 'lightgrey',\r\n            fontSize: '20px',\r\n            borderStyle: 'solid',\r\n            borderRadius: '5px',\r\n            padding: '10px',\r\n            marginBottom: '10px'\r\n        }\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    let thisStyle = (type === 'error' ? styles.error : styles.success)\r\n    return (\r\n        <div style={thisStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.status)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, {useEffect, useState} from 'react'\r\nimport Filter from './Components/Filter'\r\nimport PersonForm from './Components/PersonForm'\r\nimport Persons from './Components/Persons'\r\nimport Notification from './Components/Notification'\r\nimport personService from './Services/personService'\r\nimport pService from './Services/personService'\r\n\r\nconst App = () => {\r\n    \r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNum, setNewNum] = useState('')\r\n    const [filterList, setFilterList] = useState(persons)\r\n    const [search, setSearch] = useState('')\r\n    const [notification, setNotification] = useState(null)\r\n    const [notificationType, setNotificationType] = useState('error')\r\n\r\n    useEffect(() => {\r\n        pService.getAll()\r\n        .then(initialList => {\r\n            setPersons(initialList)\r\n            setFilterList(initialList)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumChange = (event) => {\r\n        setNewNum(event.target.value)\r\n    }\r\n\r\n    const handleSearch = (event) => {\r\n        let thisSearch = event.target.value\r\n        if (thisSearch.length === 0) {\r\n            setFilterList(persons)\r\n        } else {\r\n            let list = persons.filter(person => person.name.toLowerCase().includes(thisSearch.toLowerCase()))\r\n            setFilterList(list)\r\n        }\r\n        setSearch(thisSearch)\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        let deleteId = parseInt(event.target.id)\r\n        if (window.confirm(`Delete ${persons.find(person => person.id === deleteId).name}?`)) {\r\n            personService\r\n            .remove(deleteId)\r\n            .then(status => {\r\n                    let deleteList = persons.filter(item => item.id !== deleteId)\r\n                    setFilterList(deleteList)\r\n                    setPersons(deleteList)\r\n                    setNewName('')\r\n                    setNewNum('')\r\n                    setSearch('')\r\n                    notify('success', `Successfully deleted`)\r\n                })\r\n            .catch(error => {\r\n                notify('error', 'Could not delete')\r\n            })\r\n        } \r\n    }\r\n\r\n    const checkDuplicate = () => {\r\n        let thisMatch = persons.find(person => person.name === newName)\r\n        console.log(thisMatch)\r\n        if (thisMatch !== undefined) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const notify = (type, message) => {\r\n        setNotification(message)\r\n        setNotificationType(type)\r\n        setTimeout(() => {\r\n            setNotification(null)\r\n            setNotificationType(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const addNewItem = (event) => {\r\n        event.preventDefault()\r\n        let update = false\r\n        let thisPerson = {\r\n            name: newName,\r\n            number: newNum\r\n        }\r\n        if (checkDuplicate()) {\r\n            update = window.confirm(`${newName} already exists, replace the old number with a new one?`)\r\n        }\r\n        if (update) {\r\n            thisPerson = persons.find(person => person.name === newName)\r\n            thisPerson.number = newNum\r\n            pService\r\n                .update(thisPerson.id, thisPerson)\r\n                .then(updatedPerson => {\r\n                    let newList = persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson)\r\n                    setPersons(newList)\r\n                    setFilterList(newList)\r\n                    setNewName('')\r\n                    setNewNum('')\r\n                    setSearch('')\r\n                    notify('success', `Updated ${updatedPerson.name} successfully`)\r\n                })\r\n                .catch(error => {\r\n                    notify('error', `Could not update ${thisPerson.name}`)\r\n                })\r\n        } else {\r\n            pService\r\n            .create(thisPerson)\r\n            .then(newPerson => {\r\n                let newList = persons.concat(newPerson)\r\n                setPersons(newList)\r\n                setFilterList(newList)\r\n                setNewName('')\r\n                setNewNum('')\r\n                setSearch('')\r\n                notify('success', `successfully added ${newPerson.name}`)\r\n            }).catch(error => {\r\n                notify('error', `could not add ${thisPerson.name} to database`)\r\n            })\r\n        }  \r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notification} type ={notificationType}/>\r\n            <Filter search={search} handleSearch={handleSearch} />\r\n            <PersonForm newName={newName} handleNameChange={handleNameChange} newNum={newNum} handleNumChange={handleNumChange} addNewItem={addNewItem}/>\r\n            <h2>Numbers</h2>\r\n            <Persons filterList={filterList} handleDelete={handleDelete}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}